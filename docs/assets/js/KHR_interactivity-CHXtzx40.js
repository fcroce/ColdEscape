import{az as x,e as ks,aA as o,V as T,b as I,aB as is,a4 as y,C as Us,a3 as Hs,a as Xs,aC as Ys,aD as js,ac as b,ak as et,aE as st,L as tt,a6 as at,a7 as nt}from"./index-DsZJ-ns8.js";import{G as rt}from"./gltfPathToObjectConverter-CGviXP77.js";var Ss;(function(a){a[a.Input=0]="Input",a[a.Output=1]="Output"})(Ss||(Ss={}));class Ts{constructor(e,s,t){this._ownerBlock=t,this._connectedPoint=[],this.uniqueId=x(),this.connectedPointIds=[],this.name=e,this._connectionType=s}get connectionType(){return this._connectionType}_isSingularConnection(){return!0}isConnected(){return this._connectedPoint.length>0}connectTo(e){if(this._connectionType===e._connectionType)throw new Error(`Cannot connect two points of type ${this.connectionType}`);if(this._isSingularConnection()&&this._connectedPoint.length>0||e._isSingularConnection()&&e._connectedPoint.length>0)throw new Error("Max number of connections for point reached");this._connectedPoint.push(e),e._connectedPoint.push(this)}serialize(e={}){e.uniqueId=this.uniqueId,e.name=this.name,e._connectionType=this._connectionType,e.connectedPointIds=[],e.className=this.getClassName();for(const s of this._connectedPoint)e.connectedPointIds.push(s.uniqueId)}getClassName(){return"FGConnection"}deserialize(e){this.uniqueId=e.uniqueId,this.name=e.name,this._connectionType=e._connectionType,this.connectedPointIds=e.connectedPointIds}static Parse(e={},s){const t=ks.Instantiate(e.className),n=new t(e.name,e._connectionType,s);return n.deserialize(e),n}}class m{constructor(e){this.value=this._toInt(e)}_toInt(e){return e|0}add(e){return new m(this.value+e.value)}subtract(e){return new m(this.value-e.value)}multiply(e){return new m(Math.imul(this.value,e.value))}divide(e){return new m(this.value/e.value)}getClassName(){return m.ClassName}equals(e){return this.value===e.value}static Parse(e){return new m(e.value)}}m.ClassName="FlowGraphInteger";o("FlowGraphInteger",m);class f{constructor(e,s){this.typeName=e,this.defaultValue=s}serialize(e){e.typeName=this.typeName,e.defaultValue=this.defaultValue}static Parse(e){return new f(e.typeName,e.defaultValue)}}const r=new f("any",void 0),C=new f("number",0),V=new f("boolean",!1),Ds=new f("Vector2",T.Zero()),P=new f("Vector3",I.Zero());new f("Vector4",is.Zero());const w=new f("Matrix",y.Identity());new f("Color3",Us.Black());new f("Quaternion",Hs.Identity());const d=new f("FlowGraphInteger",new m(0));class Fs extends Ts{constructor(e,s,t,n){super(e,s,t),this.richType=n}_isSingularConnection(){return this.connectionType===0}setValue(e,s){s._setConnectionValue(this,e)}connectTo(e){super.connectTo(e)}_getValueOrDefault(e){return e._hasConnectionValue(this)?e._getConnectionValue(this):this.richType.defaultValue}getValue(e){return this.connectionType===1?(e._notifyExecuteNode(this._ownerBlock),this._ownerBlock._updateOutputs(e),this._getValueOrDefault(e)):this.isConnected()?this._connectedPoint[0].getValue(e):this._getValueOrDefault(e)}getClassName(){return"FGDataConnection"}serialize(e={}){super.serialize(e),e.richType={},this.richType.serialize(e.richType)}static Parse(e,s){const t=Ts.Parse(e,s);return t.richType=f.Parse(e.richType),t}}o("FGDataConnection",Fs);function Ks(a){return a==="Mesh"||a==="AbstractMesh"||a==="GroundMesh"||a==="InstanceMesh"||a==="LinesMesh"||a==="GoldbergMesh"||a==="GreasedLineMesh"||a==="TrailMesh"}function Ws(a){return a==="Vector2"||a==="Vector3"||a==="Vector4"||a==="Quaternion"||a==="Color3"||a==="Color4"}function ot(a,e){if(a==="Vector2")return T.FromArray(e);if(a==="Vector3")return I.FromArray(e);if(a==="Vector4")return is.FromArray(e);if(a==="Quaternion")return Hs.FromArray(e);if(a==="Color3")return new Us(e[0],e[1],e[2]);if(a==="Color4")return new Xs(e[0],e[1],e[2],e[3]);throw new Error(`Unknown vector class name ${a}`)}function Zs(a,e,s){var n;const t=((n=e==null?void 0:e.getClassName)==null?void 0:n.call(e))??"";Ks(t)?s[a]={name:e.name,className:t}:Ws(t)?s[a]={value:e.asArray(),className:t}:s[a]=e}function xs(a,e,s){const t=e[a];let n;const i=t==null?void 0:t.className;return Ks(i)?n=s.getMeshByName(t.name):Ws(i)?n=ot(i,t.value):i==="Matrix"?n=y.FromArray(t.value):i===m.ClassName?n=m.Parse(t):t&&t.value!==void 0?n=t.value:n=t,n}function it(a){return a==="FGSetPropertyBlock"||a==="FGGetPropertyBlock"||a==="FGPlayAnimationBlock"||a==="FGMeshPickEventBlock"}class us{constructor(e){var s;this.config=e,this.uniqueId=x(),this.name=((s=this.config)==null?void 0:s.name)??this.getClassName(),this.dataInputs=[],this.dataOutputs=[]}_updateOutputs(e){}registerDataInput(e,s){const t=new Fs(e,0,this,s);return this.dataInputs.push(t),t}registerDataOutput(e,s){const t=new Fs(e,1,this,s);return this.dataOutputs.push(t),t}getDataInput(e){return this.dataInputs.find(s=>s.name===e)}getDataOutput(e){return this.dataOutputs.find(s=>s.name===e)}serialize(e={},s=Zs){e.uniqueId=this.uniqueId,e.config={},this.config&&(e.config.name=this.config.name),e.dataInputs=[],e.dataOutputs=[],e.className=this.getClassName();for(const t of this.dataInputs){const n={};t.serialize(n),e.dataInputs.push(n)}for(const t of this.dataOutputs){const n={};t.serialize(n),e.dataOutputs.push(n)}}getClassName(){return"FGBlock"}static Parse(e,s){const t=ks.Instantiate(e.className),n={},i=s.valueParseFunction??xs;if(e.config)for(const c in e.config)n[c]=i(c,e.config,s.scene);it(e.className)&&(n.pathConverter=s.pathConverter);const l=new t(n);l.uniqueId=e.uniqueId;for(let c=0;c<e.dataInputs.length;c++){const g=l.getDataInput(e.dataInputs[c].name);if(g)g.deserialize(e.dataInputs[c]);else throw new Error("Could not find data input with name "+e.dataInputs[c].name+" in block "+e.className)}for(let c=0;c<e.dataOutputs.length;c++){const g=l.getDataOutput(e.dataOutputs[c].name);if(g)g.deserialize(e.dataOutputs[c]);else throw new Error("Could not find data output with name "+e.dataOutputs[c].name+" in block "+e.className)}return l.metadata=e.metadata,l.deserialize&&l.deserialize(e),l}}class Es extends Ts{_isSingularConnection(){return this.connectionType===1}_activateSignal(e){var s;this.connectionType===0?(e._notifyExecuteNode(this._ownerBlock),this._ownerBlock._execute(e,this),e._increaseExecutionId()):(s=this._connectedPoint[0])==null||s._activateSignal(e)}}o("FlowGraphSignalConnection",Es);class O extends us{constructor(e){super(e),this.signalInputs=[],this.signalOutputs=[],this.in=this._registerSignalInput("in")}_registerSignalInput(e){const s=new Es(e,0,this);return this.signalInputs.push(s),s}_registerSignalOutput(e){const s=new Es(e,1,this);return this.signalOutputs.push(s),s}getSignalInput(e){return this.signalInputs.find(s=>s.name===e)}getSignalOutput(e){return this.signalOutputs.find(s=>s.name===e)}serialize(e={}){super.serialize(e),e.signalInputs=[],e.signalOutputs=[];for(const s of this.signalInputs){const t={};s.serialize(t),e.signalInputs.push(t)}for(const s of this.signalOutputs){const t={};s.serialize(t),e.signalOutputs.push(t)}}deserialize(e){for(let s=0;s<e.signalInputs.length;s++){const t=this.getSignalInput(e.signalInputs[s].name);if(t)t.deserialize(e.signalInputs[s]);else throw new Error("Could not find signal input with name "+e.signalInputs[s].name+" in block "+e.className)}for(let s=0;s<e.signalOutputs.length;s++){const t=this.getSignalOutput(e.signalOutputs[s].name);if(t)t.deserialize(e.signalOutputs[s]);else throw new Error("Could not find signal output with name "+e.signalOutputs[s].name+" in block "+e.className)}}getClassName(){return"FGExecutionBlock"}}class Qs extends O{constructor(e){super(e),this.out=this._registerSignalOutput("out"),this.done=this._registerSignalOutput("done")}_startPendingTasks(e){this._preparePendingTasks(e),e._addPendingBlock(this)}}class hs extends Qs{_execute(e){e._notifyExecuteNode(this),this.out._activateSignal(e)}}class bs{constructor(e){this.uniqueId=x(),this._userVariables={},this._executionVariables={},this._connectionValues={},this._pendingBlocks=[],this._executionId=0,this.onNodeExecutedObservable=new b,this._configuration=e}hasVariable(e){return e in this._userVariables}setVariable(e,s){this._userVariables[e]=s}getVariable(e){return this._userVariables[e]}get userVariables(){return this._userVariables}_getUniqueIdPrefixedName(e,s){return`${e.uniqueId}_${s}`}_setExecutionVariable(e,s,t){this._executionVariables[this._getUniqueIdPrefixedName(e,s)]=t}_getExecutionVariable(e,s,t){return this._hasExecutionVariable(e,s)?this._executionVariables[this._getUniqueIdPrefixedName(e,s)]:t}_deleteExecutionVariable(e,s){delete this._executionVariables[this._getUniqueIdPrefixedName(e,s)]}_hasExecutionVariable(e,s){return this._getUniqueIdPrefixedName(e,s)in this._executionVariables}_hasConnectionValue(e){return e.uniqueId in this._connectionValues}_setConnectionValue(e,s){this._connectionValues[e.uniqueId]=s}_getConnectionValue(e){return this._connectionValues[e.uniqueId]}get configuration(){return this._configuration}_addPendingBlock(e){this._pendingBlocks.push(e)}_removePendingBlock(e){const s=this._pendingBlocks.indexOf(e);s!==-1&&this._pendingBlocks.splice(s,1)}_clearPendingBlocks(){for(const e of this._pendingBlocks)e._cancelPendingTasks(this);this._pendingBlocks.length=0}_notifyExecuteNode(e){this.onNodeExecutedObservable.notifyObservers(e)}_increaseExecutionId(){this._executionId++}get executionId(){return this._executionId}serialize(e={},s=Zs){e.uniqueId=this.uniqueId,e._userVariables={};for(const t in this._userVariables)s(t,this._userVariables[t],e._userVariables);e._connectionValues={};for(const t in this._connectionValues)s(t,this._connectionValues[t],e._connectionValues)}getClassName(){return"FGContext"}static Parse(e,s){const t=s.graph.createContext(),n=s.valueParseFunction??xs;t.uniqueId=e.uniqueId;for(const i in e._userVariables){const l=n(i,e._userVariables,t._configuration.scene);t._userVariables[i]=l}for(const i in e._connectionValues){const l=n(i,e._connectionValues,t._configuration.scene);t._connectionValues[i]=l}return t}}Ys([js()],bs.prototype,"uniqueId",void 0);function Os(a,e){return!!(a.parent&&(a.parent===e||Os(a.parent,e)))}class S extends hs{constructor(e){super(e),this.config=e}_getReferencedMesh(){const e=this.config.pathConverter.convert(this.config.path),s=e.info.getObject(e.object);if(!s||!(s instanceof et))throw new Error("Mesh pick event block requires a valid mesh");return s}_preparePendingTasks(e){let s=e._getExecutionVariable(this,"meshPickObserver");if(!s){const t=this._getReferencedMesh();e._setExecutionVariable(this,"mesh",t),s=t.getScene().onPointerObservable.add(i=>{var l,c,g;i.type===st.POINTERPICK&&((l=i.pickInfo)!=null&&l.pickedMesh)&&(((c=i.pickInfo)==null?void 0:c.pickedMesh)===t||Os((g=i.pickInfo)==null?void 0:g.pickedMesh,t))&&this._execute(e)});const n=t.onDisposeObservable.add(()=>this._onDispose);e._setExecutionVariable(this,"meshPickObserver",s),e._setExecutionVariable(this,"meshDisposeObserver",n)}}_onDispose(e){this._cancelPendingTasks(e),e._removePendingBlock(this)}_cancelPendingTasks(e){const s=e._getExecutionVariable(this,"mesh"),t=e._getExecutionVariable(this,"meshPickObserver"),n=e._getExecutionVariable(this,"meshDisposeObserver");s.getScene().onPointerObservable.remove(t),s.onDisposeObservable.remove(n),e._deleteExecutionVariable(this,"mesh"),e._deleteExecutionVariable(this,"meshPickObserver"),e._deleteExecutionVariable(this,"meshDisposeObserver")}getClassName(){return S.ClassName}serialize(e){super.serialize(e),e.config.path=this.config.path}}S.ClassName="FGMeshPickEventBlock";o(S.ClassName,S);var Rs;(function(a){a[a.Stopped=0]="Stopped",a[a.Started=1]="Started"})(Rs||(Rs={}));class D{constructor(e){this._eventBlocks=[],this._executionContexts=[],this.state=0,this._scene=e.scene,this._coordinator=e.coordinator,this._sceneDisposeObserver=this._scene.onDisposeObservable.add(()=>this.dispose())}createContext(){const e=new bs({scene:this._scene,coordinator:this._coordinator});return this._executionContexts.push(e),e}getContext(e){return this._executionContexts[e]}addEventBlock(e){this._eventBlocks.push(e)}start(){if(this.state!==1){this.state=1,this._executionContexts.length===0&&this.createContext();for(const e of this._executionContexts){const s=this._getContextualOrder();for(const t of s)t._startPendingTasks(e)}}}_getContextualOrder(){const e=[];for(const s of this._eventBlocks)if(s.getClassName()===S.ClassName){const t=s._getReferencedMesh();let n=0;for(;n<e.length;n++){const l=e[n]._getReferencedMesh();if(t&&l&&Os(t,l))break}e.splice(n,0,s)}else e.push(s);return e}dispose(){if(this.state!==0){this.state=0;for(const e of this._executionContexts)e._clearPendingBlocks();this._executionContexts.length=0,this._eventBlocks.length=0,this._scene.onDisposeObservable.remove(this._sceneDisposeObserver),this._sceneDisposeObserver=null}}visitAllBlocks(e){const s=[],t=new Set;for(const n of this._eventBlocks)s.push(n),t.add(n.uniqueId);for(;s.length>0;){const n=s.pop();e(n);for(const i of n.dataInputs)for(const l of i._connectedPoint)t.has(l._ownerBlock.uniqueId)||(s.push(l._ownerBlock),t.add(l._ownerBlock.uniqueId));if(n instanceof O)for(const i of n.signalOutputs)for(const l of i._connectedPoint)t.has(l._ownerBlock.uniqueId)||(s.push(l._ownerBlock),t.add(l._ownerBlock.uniqueId))}}serialize(e={},s){e.allBlocks=[],this.visitAllBlocks(t=>{const n={};t.serialize(n),e.allBlocks.push(n)}),e.executionContexts=[];for(const t of this._executionContexts){const n={};t.serialize(n,s),e.executionContexts.push(n)}}static GetDataOutConnectionByUniqueId(e,s){for(const t of e)for(const n of t.dataOutputs)if(n.uniqueId===s)return n;throw new Error("Could not find data out connection with unique id "+s)}static GetSignalInConnectionByUniqueId(e,s){for(const t of e)if(t instanceof O){for(const n of t.signalInputs)if(n.uniqueId===s)return n}throw new Error("Could not find signal in connection with unique id "+s)}static Parse(e,s){const t=s.coordinator.createGraph(),n=[],i=s.valueParseFunction??xs;for(const l of e.allBlocks){const c=us.Parse(l,{scene:s.coordinator.config.scene,pathConverter:s.pathConverter,valueParseFunction:i});n.push(c),c instanceof hs&&t.addEventBlock(c)}for(const l of n){for(const c of l.dataInputs)for(const g of c.connectedPointIds){const F=D.GetDataOutConnectionByUniqueId(n,g);c.connectTo(F)}if(l instanceof O)for(const c of l.signalOutputs)for(const g of c.connectedPointIds){const F=D.GetSignalInConnectionByUniqueId(n,g);c.connectTo(F)}}for(const l of e.executionContexts)bs.Parse(l,{graph:t,valueParseFunction:i});return t}}class M{constructor(e){this.config=e,this._flowGraphs=[],this._customEventsMap=new Map,this.config.scene.onDisposeObservable.add(()=>{this.dispose()}),(M.SceneCoordinators.get(this.config.scene)??[]).push(this)}createGraph(){const e=new D({scene:this.config.scene,coordinator:this});return this._flowGraphs.push(e),e}removeGraph(e){const s=this._flowGraphs.indexOf(e);s!==-1&&(e.dispose(),this._flowGraphs.splice(s,1))}start(){this._flowGraphs.forEach(e=>e.start())}dispose(){this._flowGraphs.forEach(t=>t.dispose()),this._flowGraphs.length=0;const e=M.SceneCoordinators.get(this.config.scene)??[],s=e.indexOf(this);s!==-1&&e.splice(s,1)}serialize(e,s){e._flowGraphs=[],this._flowGraphs.forEach(t=>{const n={};t.serialize(n,s),e._flowGraphs.push(n)})}static Parse(e,s){var i;const t=s.valueParseFunction??xs,n=new M({scene:s.scene});return(i=e._flowGraphs)==null||i.forEach(l=>{D.Parse(l,{coordinator:n,valueParseFunction:t,pathConverter:s.pathConverter})}),n}get flowGraphs(){return this._flowGraphs}getCustomEventObservable(e){let s=this._customEventsMap.get(e);return s||(s=new b,this._customEventsMap.set(e,s)),s}notifyCustomEvent(e,s){const t=this._customEventsMap.get(e);t&&t.notifyObservers(s)}}M.SceneCoordinators=new Map;class ms extends hs{_preparePendingTasks(e){if(!e._getExecutionVariable(this,"sceneReadyObserver")){const t=e.configuration.scene.onReadyObservable.add(()=>{this._execute(e)});e._setExecutionVariable(this,"sceneReadyObserver",t)}}_cancelPendingTasks(e){const s=e._getExecutionVariable(this,"sceneReadyObserver");e.configuration.scene.onReadyObservable.remove(s),e._deleteExecutionVariable(this,"sceneReadyObserver")}getClassName(){return ms.ClassName}}ms.ClassName="FGSceneReadyEventBlock";o("FGSceneReadyEventBlock",ms);class R extends hs{_preparePendingTasks(e){if(!e._getExecutionVariable(this,"sceneBeforeRender")){const t=e.configuration.scene.onBeforeRenderObservable.add(()=>{this._execute(e)});e._setExecutionVariable(this,"sceneBeforeRender",t)}}_cancelPendingTasks(e){const s=e._getExecutionVariable(this,"sceneBeforeRender");e.configuration.scene.onBeforeRenderObservable.remove(s),e._deleteExecutionVariable(this,"sceneBeforeRender")}getClassName(){return R.ClassName}}R.ClassName="FGSceneTickEventBlock";o(R.ClassName,R);class ls extends O{constructor(e){super(e),this.out=this._registerSignalOutput("out")}}class q extends ls{constructor(e){super(e),this.message=this.registerDataInput("message",r)}_execute(e){const s=this.message.getValue(e);tt.Log(s),this.out._activateSignal(e)}getClassName(){return q.ClassName}}q.ClassName="FGConsoleLogBlock";o(q.ClassName,q);var qs;(function(a){a[a.INIT=0]="INIT",a[a.STARTED=1]="STARTED",a[a.ENDED=2]="ENDED"})(qs||(qs={}));class lt{constructor(e){this.onEachCountObservable=new b,this.onTimerAbortedObservable=new b,this.onTimerEndedObservable=new b,this.onStateChangedObservable=new b,this._observer=null,this._breakOnNextTick=!1,this._tick=s=>{const t=Date.now();this._timer=t-this._startTime;const n={startTime:this._startTime,currentTime:t,deltaTime:this._timer,completeRate:this._timer/this._timeToEnd,payload:s},i=this._breakOnNextTick||this._breakCondition(n);i||this._timer>=this._timeToEnd?this._stop(n,i):this.onEachCountObservable.notifyObservers(n)},this._setState(0),this._contextObservable=e.contextObservable,this._observableParameters=e.observableParameters??{},this._breakCondition=e.breakCondition??(()=>!1),this._timeToEnd=e.timeout,e.onEnded&&this.onTimerEndedObservable.add(e.onEnded),e.onTick&&this.onEachCountObservable.add(e.onTick),e.onAborted&&this.onTimerAbortedObservable.add(e.onAborted)}set breakCondition(e){this._breakCondition=e}clearObservables(){this.onEachCountObservable.clear(),this.onTimerAbortedObservable.clear(),this.onTimerEndedObservable.clear(),this.onStateChangedObservable.clear()}start(e=this._timeToEnd){if(this._state===1)throw new Error("Timer already started. Please stop it before starting again");this._timeToEnd=e,this._startTime=Date.now(),this._timer=0,this._observer=this._contextObservable.add(this._tick,this._observableParameters.mask,this._observableParameters.insertFirst,this._observableParameters.scope),this._setState(1)}stop(){this._state===1&&(this._breakOnNextTick=!0)}dispose(){this._observer&&this._contextObservable.remove(this._observer),this.clearObservables()}_setState(e){this._state=e,this.onStateChangedObservable.notifyObservers(this._state)}_stop(e,s=!1){this._contextObservable.remove(this._observer),this._setState(2),s?this.onTimerAbortedObservable.notifyObservers(e):this.onTimerEndedObservable.notifyObservers(e)}}class ds extends Qs{constructor(e){super(e),this.timeout=this.registerDataInput("timeout",C)}_preparePendingTasks(e){const s=this.timeout.getValue(e);if(s!==void 0&&s>=0){const t=e._getExecutionVariable(this,"runningTimers")||[],n=e.configuration.scene,i=new lt({timeout:s,contextObservable:n.onBeforeRenderObservable,onEnded:()=>this._onEnded(i,e)});i.start(),t.push(i),e._setExecutionVariable(this,"runningTimers",t)}}_execute(e){this._startPendingTasks(e),this.out._activateSignal(e)}_onEnded(e,s){const t=s._getExecutionVariable(this,"runningTimers")||[],n=t.indexOf(e);n!==-1?t.splice(n,1):ks.Warn("FlowGraphTimerBlock: Timer ended but was not found in the running timers list"),s._removePendingBlock(this),this.done._activateSignal(s)}_cancelPendingTasks(e){const s=e._getExecutionVariable(this,"runningTimers")||[];for(const t of s)t.dispose();e._deleteExecutionVariable(this,"runningTimers")}getClassName(){return ds.ClassName}}ds.ClassName="FGTimerBlock";o("FGTimerBlock",ds);class ps extends ls{constructor(e){super(e),this.config=e;for(let s=0;s<this.config.eventData.length;s++){const t=this.config.eventData[s];this.registerDataInput(t,r)}}_execute(e){const s=this.config.eventId,t=this.dataInputs.map(n=>n.getValue(e));e.configuration.coordinator.notifyCustomEvent(s,t),this.out._activateSignal(e)}getClassName(){return ps.ClassName}}ps.ClassName="FGSendCustomEventBlock";o("FGSendCustomEventBlock",ps);class A extends hs{constructor(e){super(e),this.config=e;for(let s=0;s<this.config.eventData.length;s++){const t=this.config.eventData[s];this.registerDataOutput(t,r)}}_preparePendingTasks(e){const s=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);this._eventObserver=s.add(t=>{for(let n=0;n<t.length;n++)this.dataOutputs[n].setValue(t[n],e);this._execute(e)})}_cancelPendingTasks(e){const s=e.configuration.coordinator.getCustomEventObservable(this.config.eventId);s?s.remove(this._eventObserver):ks.Warn(`FlowGraphReceiveCustomEventBlock: Missing observable for event ${this.config.eventId}`)}getClassName(){return A.ClassName}serialize(e){super.serialize(e),e.eventId=this.config.eventId,e.eventData=this.config.eventData}}A.ClassName="FGReceiveCustomEventBlock";o(A.ClassName,A);class $ extends O{constructor(e){super(e),this.config=e,this.outFlows=[];for(let s=0;s<this.config.numberOutputFlows;s++)this.outFlows.push(this._registerSignalOutput(`${s}`))}_execute(e){for(let s=0;s<this.config.numberOutputFlows;s++)this.outFlows[s]._activateSignal(e)}getClassName(){return $.ClassName}}$.ClassName="FGSequenceBlock";o($.ClassName,$);const As=new RegExp(/\{(\w+)\}/g);class Js{constructor(e,s){this.path=e,this.ownerBlock=s,this.templatedInputs=[];let t=As.exec(e);for(;t;){const[,n]=t;this.templatedInputs.push(s.registerDataInput(n,d)),t=As.exec(e)}}getAccessor(e,s){let t=this.path;for(const n of this.templatedInputs){const i=n.getValue(s).value;t=t.replace(`{${n.name}}`,i.toString())}return e.convert(t)}}class L extends us{constructor(e){super(e),this.config=e,this.value=this.registerDataOutput("value",r),this.templateComponent=new Js(e.path,this)}_updateOutputs(e){const s=this.templateComponent.getAccessor(this.config.pathConverter,e),t=s.info.get(s.object);this.value.setValue(t,e)}getClassName(){return L.ClassName}serialize(e={}){super.serialize(e),e.config.path=this.config.path}}L.ClassName="FGGetPropertyBlock";o(L.ClassName,L);class Cs extends ls{constructor(e){super(e),this.config=e,this.a=this.registerDataInput("a",r),this.templateComponent=new Js(e.path,this)}_execute(e){const s=this.a.getValue(e),t=this.templateComponent.getAccessor(this.config.pathConverter,e);t.info.set(s,t.object),this.out._activateSignal(e)}serialize(e={}){super.serialize(e),e.config.path=this.config.path}getClassName(){return Cs.ClassName}}Cs.ClassName="FGSetPropertyBlock";o("FGSetPropertyBlock",Cs);const $s="cachedOperationValue",Ls="cachedExecutionId";class ws extends us{constructor(e,s){super(s),this.value=this.registerDataOutput("value",e)}_updateOutputs(e){const s=e._getExecutionVariable(this,Ls),t=e._getExecutionVariable(this,$s);if(t!==void 0&&s===e.executionId)this.value.setValue(t,e);else{const n=this._doOperation(e);e._setExecutionVariable(this,$s,n),e._setExecutionVariable(this,Ls,e.executionId),this.value.setValue(n,e)}}}class p extends ws{constructor(e,s,t,n,i,l){super(t,l),this._operation=n,this._className=i,this.a=this.registerDataInput("a",e),this.b=this.registerDataInput("b",s)}_doOperation(e){return this._operation(this.a.getValue(e),this.b.getValue(e))}getClassName(){return this._className}}class Ns extends ws{constructor(e,s,t,n){super(e,n),this._operation=s,this._className=t}_doOperation(e){return this._operation()}getClassName(){return this._className}}class u extends ws{constructor(e,s,t,n,i){super(s,i),this._operation=t,this._className=n,this.a=this.registerDataInput("a",e)}_doOperation(e){return this._operation(this.a.getValue(e))}getClassName(){return this._className}}class Ms extends ws{constructor(e,s,t,n,i,l,c){super(n,c),this._operation=i,this._className=l,this.a=this.registerDataInput("a",e),this.b=this.registerDataInput("b",s),this.c=this.registerDataInput("c",t)}_doOperation(e){return this._operation(this.a.getValue(e),this.b.getValue(e),this.c.getValue(e))}getClassName(){return this._className}}function N(a){return a.getClassName?a.getClassName():""}function gs(a,e){return a==="Vector2"&&e==="Vector2"||a==="Vector3"&&e==="Vector3"||a==="Vector4"&&e==="Vector4"}function fs(a,e){return a==="Matrix"&&e==="Matrix"}function _s(a,e){return a==="FlowGraphInteger"&&e==="FlowGraphInteger"}class U extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicAdd(s,t),U.ClassName,e)}_polymorphicAdd(e,s){const t=N(e),n=N(s);return gs(t,n)||fs(t,n)||_s(t,n)?e.add(s):e+s}}U.ClassName="FGAddBlock";o(U.ClassName,U);class H extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicAdd(s,t),H.ClassName,e)}_polymorphicAdd(e,s){const t=N(e),n=N(s);return gs(t,n)||_s(t,n)?e.subtract(s):fs(t,n)?e.add(s.scale(-1)):e-s}}H.ClassName="FGSubBlock";o(H.ClassName,H);class K extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicMultiply(s,t),K.ClassName,e)}_polymorphicMultiply(e,s){const t=N(e),n=N(s);return gs(t,n)||_s(t,n)?e.multiply(s):fs(t,n)?y.FromValues(e.m[0]*s.m[0],e.m[4]*s.m[4],e.m[8]*s.m[8],e.m[12]*s.m[12],e.m[1]*s.m[1],e.m[5]*s.m[5],e.m[9]*s.m[9],e.m[13]*s.m[13],e.m[2]*s.m[2],e.m[6]*s.m[6],e.m[10]*s.m[10],e.m[14]*s.m[14],e.m[3]*s.m[3],e.m[7]*s.m[7],e.m[11]*s.m[11],e.m[15]*s.m[15]):e*s}}K.ClassName="FGMultiplyBlock";o(K.ClassName,K);class W extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicDivide(s,t),W.ClassName,e)}_polymorphicDivide(e,s){const t=N(e),n=N(s);return gs(t,n)||_s(t,n)?e.divide(s):fs(t,n)?y.FromValues(e.m[0]/s.m[0],e.m[4]/s.m[4],e.m[8]/s.m[8],e.m[12]/s.m[12],e.m[1]/s.m[1],e.m[5]/s.m[5],e.m[9]/s.m[9],e.m[13]/s.m[13],e.m[2]/s.m[2],e.m[6]/s.m[6],e.m[10]/s.m[10],e.m[14]/s.m[14],e.m[3]/s.m[3],e.m[7]/s.m[7],e.m[11]/s.m[11],e.m[15]/s.m[15]):e/s}}W.ClassName="FGDivideBlock";o(W.ClassName,W);class Z extends Ns{constructor(e){super(C,()=>Math.random(),Z.ClassName,e)}}Z.ClassName="FGRandomBlock";o(Z.ClassName,Z);class Q extends p{constructor(e){super(r,r,C,(s,t)=>this._polymorphicDot(s,t),Q.ClassName,e)}_polymorphicDot(e,s){switch(N(e)){case"Vector2":return T.Dot(e,s);case"Vector3":return I.Dot(e,s);case"Vector4":return is.Dot(e,s);default:throw new Error(`Cannot get dot product of ${e} and ${s}`)}}}Q.ClassName="FGDotBlock";o(Q.ClassName,Q);class J extends Ns{constructor(e){super(C,()=>Math.E,J.ClassName,e)}}J.ClassName="FGEBlock";o(J.ClassName,J);class z extends Ns{constructor(e){super(C,()=>Math.PI,z.ClassName,e)}}z.ClassName="FGPIBlock";o(z.ClassName,z);class X extends Ns{constructor(e){super(C,()=>Number.POSITIVE_INFINITY,X.ClassName,e)}}X.ClassName="FGInfBlock";o(X.ClassName,X);class Y extends Ns{constructor(e){super(C,()=>Number.NaN,Y.ClassName,e)}}Y.ClassName="FGNaNBlock";o(Y.ClassName,Y);function h(a,e){switch(N(a)){case"FlowGraphInteger":return new m(e(a.value));case"Vector2":return new T(e(a.x),e(a.y));case"Vector3":return new I(e(a.x),e(a.y),e(a.z));case"Vector4":return new is(e(a.x),e(a.y),e(a.z),e(a.w));case"Matrix":return y.FromValues(e(a.m[0]),e(a.m[4]),e(a.m[8]),e(a.m[12]),e(a.m[1]),e(a.m[5]),e(a.m[9]),e(a.m[13]),e(a.m[2]),e(a.m[6]),e(a.m[10]),e(a.m[14]),e(a.m[3]),e(a.m[7]),e(a.m[11]),e(a.m[15]));default:return e(a)}}class j extends u{constructor(e){super(r,r,s=>this._polymorphicAbs(s),j.ClassName,e)}_polymorphicAbs(e){return h(e,Math.abs)}}j.ClassName="FGAbsBlock";o(j.ClassName,j);class ee extends u{constructor(e){super(r,r,s=>this._polymorphicSign(s),ee.ClassName,e)}_polymorphicSign(e){return h(e,Math.sign)}}ee.ClassName="FGSignBlock";o(ee.ClassName,ee);class se extends u{constructor(e){super(r,r,s=>this._polymorphicTrunc(s),se.ClassName,e)}_polymorphicTrunc(e){return h(e,Math.trunc)}}se.ClassName="FGTruncBlock";o(se.ClassName,se);class te extends u{constructor(e){super(r,r,s=>this._polymorphicFloor(s),te.ClassName,e)}_polymorphicFloor(e){return h(e,Math.floor)}}te.ClassName="FGFloorBlock";o(te.ClassName,te);class ae extends u{constructor(e){super(r,r,s=>this._polymorphicCeiling(s),ae.ClassName,e)}_polymorphicCeiling(e){return h(e,Math.ceil)}}ae.ClassName="FGCeilBlock";o(ae.ClassName,ae);class ne extends u{constructor(e){super(r,r,s=>this._polymorphicFract(s),ne.ClassName,e)}_polymorphicFract(e){return h(e,s=>s-Math.floor(s))}}ne.ClassName="FGFractBlock";o(ne.ClassName,ne);class re extends u{constructor(e){super(r,r,s=>this._polymorphicNeg(s),re.ClassName,e)}_polymorphicNeg(e){return h(e,s=>-s)}}re.ClassName="FGNegBlock";o(re.ClassName,re);function vs(a,e,s){switch(N(a)){case"FlowGraphInteger":return new m(s(a.value,e.value));case"Vector2":return new T(s(a.x,e.x),s(a.y,e.y));case"Vector3":return new I(s(a.x,e.x),s(a.y,e.y),s(a.z,e.z));case"Vector4":return new is(s(a.x,e.x),s(a.y,e.y),s(a.z,e.z),s(a.w,e.w));case"Matrix":return y.FromValues(s(a.m[0],e.m[0]),s(a.m[4],e.m[4]),s(a.m[8],e.m[8]),s(a.m[12],e.m[12]),s(a.m[1],e.m[1]),s(a.m[5],e.m[5]),s(a.m[9],e.m[9]),s(a.m[13],e.m[13]),s(a.m[2],e.m[2]),s(a.m[6],e.m[6]),s(a.m[10],e.m[10]),s(a.m[14],e.m[14]),s(a.m[3],e.m[3]),s(a.m[7],e.m[7]),s(a.m[11],e.m[11]),s(a.m[15],e.m[15]));default:return s(a,e)}}class oe extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicRemainder(s,t),oe.ClassName,e)}_polymorphicRemainder(e,s){return vs(e,s,(t,n)=>t%n)}}oe.ClassName="FGRemainderBlock";o(oe.ClassName,oe);class ie extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicMin(s,t),ie.ClassName,e)}_polymorphicMin(e,s){return vs(e,s,Math.min)}}ie.ClassName="FGMinBlock";o(ie.ClassName,ie);class le extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicMax(s,t),le.ClassName,e)}_polymorphicMax(e,s){return vs(e,s,Math.max)}}le.ClassName="FGMaxBlock";o(le.ClassName,le);function ct(a,e,s){return Math.min(Math.max(a,Math.min(e,s)),Math.max(e,s))}function zs(a,e,s,t){switch(N(a)){case"FlowGraphInteger":return new m(t(a.value,e.value,s.value));case"Vector2":return new T(t(a.x,e.x,s.x),t(a.y,e.y,s.y));case"Vector3":return new I(t(a.x,e.x,s.x),t(a.y,e.y,s.y),t(a.z,e.z,s.z));case"Vector4":return new is(t(a.x,e.x,s.x),t(a.y,e.y,s.y),t(a.z,e.z,s.z),t(a.w,e.w,s.w));case"Matrix":return y.FromValues(t(a.m[0],e.m[0],s.m[0]),t(a.m[4],e.m[4],s.m[4]),t(a.m[8],e.m[8],s.m[8]),t(a.m[12],e.m[12],s.m[12]),t(a.m[1],e.m[1],s.m[1]),t(a.m[5],e.m[5],s.m[5]),t(a.m[9],e.m[9],s.m[9]),t(a.m[13],e.m[13],s.m[13]),t(a.m[2],e.m[2],s.m[2]),t(a.m[6],e.m[6],s.m[6]),t(a.m[10],e.m[10],s.m[10]),t(a.m[14],e.m[14],s.m[14]),t(a.m[3],e.m[3],s.m[3]),t(a.m[7],e.m[7],s.m[7]),t(a.m[11],e.m[11],s.m[11]),t(a.m[15],e.m[15],s.m[15]));default:return t(a,e,s)}}class ce extends Ms{constructor(e){super(r,r,r,r,(s,t,n)=>this._polymorphicClamp(s,t,n),ce.ClassName,e)}_polymorphicClamp(e,s,t){return zs(e,s,t,ct)}}ce.ClassName="FGClampBlock";o(ce.ClassName,ce);function ut(a){return Math.min(Math.max(a,0),1)}class ue extends u{constructor(e){super(r,r,s=>this._polymorphicSaturate(s),ue.ClassName,e)}_polymorphicSaturate(e){return h(e,ut)}}ue.ClassName="FGSaturateBlock";o(ue.ClassName,ue);class he extends Ms{constructor(e){super(r,r,r,r,(s,t,n)=>this._polymorphicInterpolate(s,t,n),he.ClassName,e)}_interpolate(e,s,t){return(1-t)*e+t*s}_polymorphicInterpolate(e,s,t){return zs(e,s,t,this._interpolate)}}he.ClassName="FGInterpolateBlock";o(he.ClassName,he);class me extends p{constructor(e){super(r,r,V,(s,t)=>this._polymorphicEq(s,t),me.ClassName,e)}_polymorphicEq(e,s){const t=N(e),n=N(s);return gs(t,n)||fs(t,n)||_s(t,n)?e.equals(s):e===s}}me.ClassName="FGEqBlock";o(me.ClassName,me);function Is(a,e,s){const t=N(a),n=N(e);if(t===n){if(t==="")return s(a,e);if(t==="FlowGraphInteger")return s(a.value,e.value);throw new Error(`Cannot compare ${a} and ${e}`)}throw new Error(`${a} and ${e} are of different types.`)}class de extends p{constructor(e){super(r,r,V,(s,t)=>this._polymorphicLessThan(s,t),de.ClassName,e)}_polymorphicLessThan(e,s){return Is(e,s,(t,n)=>t<n)}}de.ClassName="FGLessThanBlock";o(de.ClassName,de);class Vs extends p{constructor(e){super(r,r,V,(s,t)=>this._polymorphicLessThanOrEqual(s,t),Vs.ClassName,e)}_polymorphicLessThanOrEqual(e,s){return Is(e,s,(t,n)=>t<=n)}}Vs.ClassName="FGLessThanOrEqualBlock";class pe extends p{constructor(e){super(r,r,V,(s,t)=>this._polymorphicGreaterThan(s,t),pe.ClassName,e)}_polymorphicGreaterThan(e,s){return Is(e,s,(t,n)=>t>n)}}pe.ClassName="FGGreaterThanBlock";o(pe.ClassName,pe);class Ce extends p{constructor(e){super(r,r,V,(s,t)=>this._polymorphicGreaterThanOrEqual(s,t),Ce.ClassName,e)}_polymorphicGreaterThanOrEqual(e,s){return Is(e,s,(t,n)=>t>=n)}}Ce.ClassName="FGGreaterThanOrEqualBlock";o(Ce.ClassName,Ce);class Ne extends u{constructor(e){super(r,V,s=>this._polymorphicIsNan(s),Ne.ClassName,e)}_polymorphicIsNan(e){const s=N(e);if(s==="")return isNaN(e);if(s==="FlowGraphInteger")return isNaN(e.value);throw new Error(`Cannot get NaN of ${e}`)}}Ne.ClassName="FGIsNanBlock";o(Ne.ClassName,Ne);class Bs extends u{constructor(e){super(r,V,s=>this._polymorphicIsInf(s),Bs.ClassName,e)}_polymorphicIsInf(e){const s=N(e);if(s==="")return!isFinite(e);if(s==="FlowGraphInteger")return!isFinite(e.value);throw new Error(`Cannot get isInf of ${e}`)}}Bs.ClassName="FGIsInfBlock";class ge extends u{constructor(e){super(r,r,s=>this._polymorphicDegToRad(s),ge.ClassName,e)}_degToRad(e){return e*Math.PI/180}_polymorphicDegToRad(e){return h(e,this._degToRad)}}ge.ClassName="FGDegToRadBlock";o(ge.ClassName,ge);class fe extends u{constructor(e){super(r,r,s=>this._polymorphicRadToDeg(s),fe.ClassName,e)}_radToDeg(e){return e*180/Math.PI}_polymorphicRadToDeg(e){return h(e,this._radToDeg)}}fe.ClassName="FGRadToDegBlock";o(fe.ClassName,fe);class _e extends u{constructor(e){super(r,r,s=>this._polymorphicSin(s),_e.ClassName,e)}_polymorphicSin(e){return h(e,Math.sin)}}_e.ClassName="FGSinBlock";o(_e.ClassName,_e);class ve extends u{constructor(e){super(r,r,s=>this._polymorphicCos(s),ve.ClassName,e)}_polymorphicCos(e){return h(e,Math.cos)}}ve.ClassName="FGCosBlock";o(ve.ClassName,ve);class ye extends u{constructor(e){super(r,r,s=>this._polymorphicTan(s),ye.ClassName,e)}_polymorphicTan(e){return h(e,Math.tan)}}ye.ClassName="FGTanBlock";o(ye.ClassName,ye);class ke extends u{constructor(e){super(r,r,s=>this._polymorphicAsin(s),ke.ClassName,e)}_polymorphicAsin(e){return h(e,Math.asin)}}ke.ClassName="FGAsinBlock";o(ke.ClassName,ke);class xe extends u{constructor(e){super(r,r,s=>this._polymorphicAcos(s),xe.ClassName,e)}_polymorphicAcos(e){return h(e,Math.acos)}}xe.ClassName="FGAcosBlock";o(xe.ClassName,xe);class we extends u{constructor(e){super(r,r,s=>this._polymorphicAtan(s),we.ClassName,e)}_polymorphicAtan(e){return h(e,Math.atan)}}we.ClassName="FGAtanBlock";o(we.ClassName,we);class Ie extends p{constructor(e){super(r,r,r,(s,t)=>this._polymorphicAtan2(s,t),Ie.ClassName,e)}_polymorphicAtan2(e,s){return vs(e,s,Math.atan2)}}Ie.ClassName="FGAtan2Block";o(Ie.ClassName,Ie);class Ve extends u{constructor(e){super(r,r,s=>this._polymorphicSinh(s),Ve.ClassName,e)}_polymorphicSinh(e){return h(e,Math.sinh)}}Ve.ClassName="FGSinhBlock";o(Ve.ClassName,Ve);class Be extends u{constructor(e){super(r,r,s=>this._polymorphicCosh(s),Be.ClassName,e)}_polymorphicCosh(e){return h(e,Math.cosh)}}Be.ClassName="FGCoshBlock";o(Be.ClassName,Be);class Ge extends u{constructor(e){super(r,r,s=>this._polymorphicTanh(s),Ge.ClassName,e)}_polymorphicTanh(e){return h(e,Math.tanh)}}Ge.ClassName="FGTanhBlock";o(Ge.ClassName,Ge);class Te extends u{constructor(e){super(r,C,s=>this._polymorphicAsinh(s),Te.ClassName,e)}_polymorphicAsinh(e){return h(e,Math.asinh)}}Te.ClassName="FGAsinhBlock";o(Te.ClassName,Te);class Fe extends u{constructor(e){super(r,C,s=>this._polymorphicAcosh(s),Fe.ClassName,e)}_polymorphicAcosh(e){return h(e,Math.acosh)}}Fe.ClassName="FGAcoshBlock";o(Fe.ClassName,Fe);class Ee extends u{constructor(e){super(r,C,s=>this._polymorphicAtanh(s),Ee.ClassName,e)}_polymorphicAtanh(e){return h(e,Math.atanh)}}Ee.ClassName="FGAtanhBlock";o(Ee.ClassName,Ee);class be extends u{constructor(e){super(r,C,s=>this._polymorphicExp(s),be.ClassName,e)}_polymorphicExp(e){return h(e,Math.exp)}}be.ClassName="FGExpBlock";o(be.ClassName,be);class Pe extends u{constructor(e){super(r,C,s=>this._polymorphicLog(s),Pe.ClassName,e)}_polymorphicLog(e){return h(e,Math.log)}}Pe.ClassName="FGLogBlock";o(Pe.ClassName,Pe);class Oe extends u{constructor(e){super(r,C,s=>this._polymorphicLog2(s),Oe.ClassName,e)}_polymorphicLog2(e){return h(e,Math.log2)}}Oe.ClassName="FGLog2Block";o(Oe.ClassName,Oe);class Me extends u{constructor(e){super(r,C,s=>this._polymorphicLog10(s),Me.ClassName,e)}_polymorphicLog10(e){return h(e,Math.log10)}}Me.ClassName="FGLog10Block";o(Me.ClassName,Me);class Se extends u{constructor(e){super(r,C,s=>this._polymorphicSqrt(s),Se.ClassName,e)}_polymorphicSqrt(e){return h(e,Math.sqrt)}}Se.ClassName="FGSqrtBlock";o(Se.ClassName,Se);class De extends u{constructor(e){super(r,C,s=>this._polymorphicCubeRoot(s),De.ClassName,e)}_polymorphicCubeRoot(e){return h(e,Math.cbrt)}}De.ClassName="FGCubeRootBlock";o(De.ClassName,De);class Re extends p{constructor(e){super(r,C,C,(s,t)=>this._polymorphicPow(s,t),Re.ClassName,e)}_polymorphicPow(e,s){return vs(e,s,Math.pow)}}Re.ClassName="FGPowBlock";o(Re.ClassName,Re);class qe extends u{constructor(e){super(r,C,s=>this._polymorphicLength(s),qe.ClassName,e)}_polymorphicLength(e){switch(N(e)){case"Vector2":case"Vector3":case"Vector4":return e.length();default:throw new Error(`Cannot compute length of value ${e}`)}}}qe.ClassName="FGLengthBlock";o(qe.ClassName,qe);class Ae extends u{constructor(e){super(r,r,s=>this._polymorphicNormalize(s),Ae.ClassName,e)}_polymorphicNormalize(e){switch(N(e)){case"Vector2":case"Vector3":case"Vector4":return e.normalize();default:throw new Error(`Cannot normalize value ${e}`)}}}Ae.ClassName="FGNormalizeBlock";o(Ae.ClassName,Ae);class $e extends p{constructor(e){super(P,P,P,(s,t)=>I.Cross(s,t),$e.ClassName,e)}}$e.ClassName="FGCrossBlock";o($e.ClassName,$e);class Le extends p{constructor(e){super(Ds,C,Ds,(s,t)=>T.Transform(s,y.RotationZ(t)),Le.ClassName,e)}}Le.ClassName="FGRotate2DBlock";o(Le.ClassName,Le);class Ue extends Ms{constructor(e){super(P,P,C,P,(s,t,n)=>I.TransformCoordinates(s,y.RotationAxis(t,n)),Ue.ClassName,e)}}Ue.ClassName="FGRotate3DBlock";o(Ue.ClassName,Ue);class He extends u{constructor(e){super(w,w,s=>y.Transpose(s),He.ClassName,e)}}He.ClassName="FGTransposeBlock";o(He.ClassName,He);class Ke extends u{constructor(e){super(w,C,s=>s.determinant(),Ke.ClassName,e)}}Ke.ClassName="FGDeterminantBlock";o(Ke.ClassName,Ke);class We extends u{constructor(e){super(w,w,s=>y.Invert(s),We.ClassName,e)}}We.ClassName="FGInvertMatrixBlock";o(We.ClassName,We);class Ze extends p{constructor(e){super(w,w,w,(s,t)=>t.multiply(s),Ze.ClassName,e)}}Ze.ClassName="FGMatMulBlock";o(Ze.ClassName,Ze);class Qe extends u{constructor(e){super(d,d,s=>new m(~s.value),Qe.ClassName,e)}}Qe.ClassName="FGBitwiseNotBlock";o(Qe.ClassName,Qe);class Je extends p{constructor(e){super(d,d,d,(s,t)=>new m(s.value&t.value),Je.ClassName,e)}}Je.ClassName="FGBitwiseAndBlock";o(Je.ClassName,Je);class ze extends p{constructor(e){super(d,d,d,(s,t)=>new m(s.value|t.value),ze.ClassName,e)}}ze.ClassName="FGBitwiseOrBlock";o(ze.ClassName,ze);class Xe extends p{constructor(e){super(d,d,d,(s,t)=>new m(s.value^t.value),Xe.ClassName,e)}}Xe.ClassName="FGBitwiseXorBlock";o(Xe.ClassName,Xe);class Ye extends p{constructor(e){super(d,d,d,(s,t)=>new m(s.value<<t.value),Ye.ClassName,e)}}Ye.ClassName="FGBitwiseLeftShiftBlock";o(Ye.ClassName,Ye);class je extends p{constructor(e){super(d,d,d,(s,t)=>new m(s.value>>t.value),je.ClassName,e)}}je.ClassName="FGBitwiseRightShiftBlock";o(je.ClassName,je);class es extends u{constructor(e){super(d,d,s=>new m(Math.clz32(s.value)),es.ClassName,e)}}es.ClassName="FGCountLeadingZerosBlock";o(es.ClassName,es);class ss extends u{constructor(e){super(d,d,s=>new m(s.value?31-Math.clz32(s.value&-s.value):32),ss.ClassName,e)}}ss.ClassName="FGCountTrailingZerosBlock";o(ss.ClassName,ss);function ht(a){let e=0;for(;a;)e+=a&1,a>>=1;return e}class ts extends u{constructor(e){super(d,d,s=>new m(ht(s.value)),ts.ClassName,e)}}ts.ClassName="FGCountOneBitsBlock";o(ts.ClassName,ts);class as extends ls{constructor(e={startIndex:new m(0)}){super(e),this.config=e,this.reset=this._registerSignalInput("reset"),this.n=this.registerDataInput("n",d),this.value=this.registerDataOutput("value",d)}_execute(e,s){if(s===this.reset)this.value.setValue(this.config.startIndex,e);else{const t=this.value.getValue(e);t.value<this.n.getValue(e).value&&(this.value.setValue(new m(t.value+1),e),this.out._activateSignal(e))}}getClassName(){return as.ClassName}}as.ClassName="FGDoNBlock";o(as.ClassName,as);class ns extends us{constructor(e){super(e),this.config=e,this.output=this.registerDataOutput(e.variableName,r)}_updateOutputs(e){const s=this.config.variableName;e.hasVariable(s)&&this.output.setValue(e.getVariable(s),e)}getClassName(){return ns.ClassName}serialize(e){super.serialize(e),e.config.variableName=this.config.variableName}}ns.ClassName="FGGetVariableBlock";o(ns.ClassName,ns);class rs extends ls{constructor(e){super(e),this.config=e,this.input=this.registerDataInput(e.variableName,r)}_execute(e){const s=this.config.variableName,t=this.input.getValue(e);e.setVariable(s,t),this.out._activateSignal(e)}getClassName(){return rs.ClassName}}rs.ClassName="FGSetVariableBlock";o(rs.ClassName,rs);class os extends ls{constructor(e){super(e),this.config=e,this.condition=this.registerDataInput("condition",V),this.loopBody=this._registerSignalOutput("loopBody")}_execute(e,s){var n;let t=this.condition.getValue(e);for((n=this.config)!=null&&n.isDo&&!t&&this.loopBody._activateSignal(e);t;)this.loopBody._activateSignal(e),t=this.condition.getValue(e);this.out._activateSignal(e)}getClassName(){return os.ClassName}serialize(e){var s;super.serialize(e),e.isDo=(s=this.config)==null?void 0:s.isDo}}os.ClassName="FGWhileLoopBlock";o(os.ClassName,os);const mt={"lifecycle/onStart":ms.ClassName,"lifecycle/onTick":R.ClassName,log:q.ClassName,"flow/delay":ds.ClassName,"customEvent/send":ps.ClassName,"customEvent/receive":A.ClassName,"flow/sequence":$.ClassName,"world/get":L.ClassName,"world/set":Cs.ClassName,"flow/doN":as.ClassName,"variable/get":ns.ClassName,"variable/set":rs.ClassName,"flow/whileLoop":os.ClassName,"math/random":Z.ClassName,"math/e":J.ClassName,"math/pi":z.ClassName,"math/inf":X.ClassName,"math/nan":Y.ClassName,"math/abs":j.ClassName,"math/sign":ee.ClassName,"math/trunc":se.ClassName,"math/floor":te.ClassName,"math/ceil":ae.ClassName,"math/fract":ne.ClassName,"math/neg":re.ClassName,"math/add":U.ClassName,"math/sub":H.ClassName,"math/mul":K.ClassName,"math/div":W.ClassName,"math/rem":oe.ClassName,"math/min":ie.ClassName,"math/max":le.ClassName,"math/clamp":ce.ClassName,"math/saturate":ue.ClassName,"math/mix":he.ClassName,"math/eq":me.ClassName,"math/lt":de.ClassName,"math/le":Vs.ClassName,"math/gt":pe.ClassName,"math/ge":Ce.ClassName,"math/isnan":Ne.ClassName,"math/isinf":Bs.ClassName,"math/rad":ge.ClassName,"math/deg":fe.ClassName,"math/sin":_e.ClassName,"math/cos":ve.ClassName,"math/tan":ye.ClassName,"math/asin":ke.ClassName,"math/acos":xe.ClassName,"math/atan":we.ClassName,"math/atan2":Ie.ClassName,"math/sinh":Ve.ClassName,"math/cosh":Be.ClassName,"math/tanh":Ge.ClassName,"math/asinh":Te.ClassName,"math/acosh":Fe.ClassName,"math/atanh":Ee.ClassName,"math/exp":be.ClassName,"math/log":Pe.ClassName,"math/log2":Oe.ClassName,"math/log10":Me.ClassName,"math/sqrt":Se.ClassName,"math/cbrt":De.ClassName,"math/pow":Re.ClassName,"math/length":qe.ClassName,"math/normalize":Ae.ClassName,"math/dot":Q.ClassName,"math/cross":$e.ClassName,"math/rotate2d":Le.ClassName,"math/rotate3d":Ue.ClassName,"math/transpose":He.ClassName,"math/determinant":Ke.ClassName,"math/inverse":We.ClassName,"math/matmul":Ze.ClassName,"math/not":Qe.ClassName,"math/and":Je.ClassName,"math/or":ze.ClassName,"math/xor":Xe.ClassName,"math/asr":je.ClassName,"math/lsl":Ye.ClassName,"math/clz":es.ClassName,"math/ctz":ss.ClassName,"math/popcnt":ts.ClassName},dt={float2:"Vector2",float3:"Vector3",float4:"Vector4",float4x4:"Matrix",int:"FlowGraphInteger"};function Ps(a,e,s){if(a.type!==void 0){const t=e.types&&e.types[a.type];if(!t)throw new Error(`${s}: Unknown type: ${a.type}`);const n=t.signature;if(!n)throw new Error(`${s}: Type ${a.type} has no signature`);const i=dt[n];return{value:a.value,className:i}}else return a.value}function pt(a,e,s){const t={},n=a.configuration??[];for(const i of n)if(i.id==="customEvent"){const l=e.customEvents&&e.customEvents[i.value];if(!l)throw new Error(`/extensions/KHR_interactivity/nodes/${s}: Unknown custom event: ${i.value}`);t.eventId=l.id,t.eventData=l.values.map(c=>c.id)}else if(i.id==="variable"){const l=e.variables&&e.variables[i.value];if(!l)throw new Error(`/extensions/KHR_interactivity/nodes/${s}: Unknown variable: ${i.value}`);t.variableName=l.id}else if(i.id==="path"){const l=i.value;t.path=l}else t[i.id]=Ps(i,e,`/extensions/KHR_interactivity/nodes/${s}`);return t}function Ct(a,e,s){const t=mt[e.type];if(!t)throw new Error(`/extensions/KHR_interactivity/nodes/${a}: Unknown block type: ${e.type}`);const n=a.toString(),i=pt(e,s,n),l=e.metadata;return{className:t,config:i,uniqueId:n,metadata:l,dataInputs:[],dataOutputs:[],signalInputs:[],signalOutputs:[]}}function Nt(a){const e={uniqueId:x(),_userVariables:{},_connectionValues:{}},s=[e],t=[];for(let i=0;i<a.nodes.length;i++){const l=a.nodes[i],c=Ct(i,l,a);t.push(c)}for(let i=0;i<a.nodes.length;i++){const l=a.nodes[i],c=t[i],g=l.flows??[];for(const _ of g){const E=_.id,k={uniqueId:x(),name:E,_connectionType:1,connectedPointIds:[]};c.signalOutputs.push(k);const B=_.node,cs=_.socket,G=t[B];if(!G)throw new Error(`/extensions/KHR_interactivity/nodes/${i}: Could not find node with id ${B} that connects its input with with node ${i}'s output ${E}`);let v=G.signalInputs.find(Gs=>Gs.name===cs);v||(v={uniqueId:x(),name:cs,_connectionType:0,connectedPointIds:[]},G.signalInputs.push(v)),v.connectedPointIds.push(k.uniqueId),k.connectedPointIds.push(v.uniqueId)}const F=l.values??[];for(const _ of F){const E=_.id,k={uniqueId:x(),name:E,_connectionType:0,connectedPointIds:[]};if(c.dataInputs.push(k),_.value!==void 0){const B=Ps(_,a,`/extensions/KHR_interactivity/nodes/${i}`);e._connectionValues[k.uniqueId]=B}else if(_.node!==void 0&&_.socket!==void 0){const B=_.node,cs=_.socket,G=t[B];if(!G)throw new Error(`/extensions/KHR_interactivity/nodes/${i}: Could not find node with id ${B} that connects its output with node${i}'s input ${E}`);let v=G.dataOutputs.find(Gs=>Gs.name===cs);v||(v={uniqueId:x(),name:cs,_connectionType:1,connectedPointIds:[]},G.dataOutputs.push(v)),k.connectedPointIds.push(v.uniqueId),v.connectedPointIds.push(k.uniqueId)}else throw new Error(`/extensions/KHR_interactivity/nodes/${i}: Invalid socket ${E} in node ${i}`)}}const n=a.variables??[];for(let i=0;i<n.length;i++){const l=n[i],c=l.id;e._userVariables[c]=Ps(l,a,`/extensions/KHR_interactivity/variables/${i}`)}return{allBlocks:t,executionContexts:s}}class gt extends rt{constructor(e){super(e,_t)}}const ft={__array__:{__target__:!0,translation:{type:"Vector3",get:a=>a._babylonTransformNode.position,set:(a,e)=>{const s=e._babylonTransformNode;s.position=a},getObject(a){return a._babylonTransformNode}}}},_t={nodes:ft},ys="KHR_interactivity";class vt{constructor(e){this._loader=e,this.name=ys,this.enabled=this._loader.isExtensionUsed(ys),this._pathConverter=new gt(this._loader.gltf)}dispose(){this._loader=null,delete this._pathConverter}onReady(){var i;if(!this._loader.babylonScene||!this._pathConverter)return;const e=this._loader.babylonScene,s=(i=this._loader.gltf.extensions)==null?void 0:i.KHR_interactivity,t=Nt(s),n=new M({scene:e});D.Parse(t,{coordinator:n,pathConverter:this._pathConverter}),n.start()}}at(ys);nt(ys,!0,a=>new vt(a));export{vt as KHR_interactivity};
