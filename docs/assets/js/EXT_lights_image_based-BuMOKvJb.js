import{a0 as g,a1 as y,a2 as f,a3 as h,a4 as x,a5 as A,i as b,a6 as T,a7 as w}from"./index-Curn0qvy.js";import{G as S,A as m}from"./glTFLoader-By7KYH5z.js";import"./glTFLoaderAnimation-CuW2wpvm.js";class d extends g{constructor(a,e,n,s=5,t=0,r=!1,i=!1,l=3,o=null){super("",a),this._texture=a.getEngine().createRawCubeTexture(e,n,s,t,r,i,l,o)}update(a,e,n,s,t=null){this._texture.getEngine().updateRawCubeTexture(this._texture,a,e,n,s,t)}updateRGBDAsync(a,e=null,n=.8,s=0){return y(this._texture,a,e,n,s).then(()=>{})}clone(){return f.Clone(()=>{const a=this.getScene(),e=this._texture,n=new d(a,e._bufferViewArray,e.width,e.format,e.type,e.generateMipMaps,e.invertY,e.samplingMode,e._compression);return e.source===13&&n.updateRGBDAsync(e._bufferViewArrayArray,e._sphericalPolynomial,e._lodGenerationScale,e._lodGenerationOffset),n},this)}}const c="EXT_lights_image_based";class G{constructor(a){this.name=c,this._loader=a,this.enabled=this._loader.isExtensionUsed(c)}dispose(){this._loader=null,delete this._lights}onLoading(){const a=this._loader.gltf.extensions;if(a&&a[this.name]){const e=a[this.name];this._lights=e.lights}}loadSceneAsync(a,e){return S.LoadExtensionAsync(a,e,this.name,(n,s)=>{this._loader._allMaterialsDirtyRequired=!0;const t=new Array;t.push(this._loader.loadSceneAsync(a,e)),this._loader.logOpen(`${n}`);const r=m.Get(`${n}/light`,this._lights,s.light);return t.push(this._loadLightAsync(`/extensions/${this.name}/lights/${s.light}`,r).then(i=>{this._loader.babylonScene.environmentTexture=i})),this._loader.logClose(),Promise.all(t).then(()=>{})})}_loadLightAsync(a,e){if(!e._loaded){const n=new Array;this._loader.logOpen(`${a}`);const s=new Array(e.specularImages.length);for(let t=0;t<e.specularImages.length;t++){const r=e.specularImages[t];s[t]=new Array(r.length);for(let i=0;i<r.length;i++){const l=`${a}/specularImages/${t}/${i}`;this._loader.logOpen(`${l}`);const o=r[i],_=m.Get(l,this._loader.gltf.images,o);n.push(this._loader.loadImageAsync(`/images/${o}`,_).then(p=>{s[t][i]=p})),this._loader.logClose()}}this._loader.logClose(),e._loaded=Promise.all(n).then(()=>{const t=new d(this._loader.babylonScene,null,e.specularImageSize);if(t.name=e.name||"environment",e._babylonTexture=t,e.intensity!=null&&(t.level=e.intensity),e.rotation){let o=h.FromArray(e.rotation);this._loader.babylonScene.useRightHandedSystem||(o=h.Inverse(o)),x.FromQuaternionToRef(o,t.getReflectionTextureMatrix())}if(!e.irradianceCoefficients)throw new Error(`${a}: Irradiance coefficients are missing`);const r=A.FromArray(e.irradianceCoefficients);r.scaleInPlace(e.intensity),r.convertIrradianceToLambertianRadiance();const i=b.FromHarmonics(r),l=(s.length-1)/Math.log2(e.specularImageSize);return t.updateRGBDAsync(s,i,l)})}return e._loaded.then(()=>e._babylonTexture)}}T(c);w(c,!0,u=>new G(u));export{G as EXT_lights_image_based};
